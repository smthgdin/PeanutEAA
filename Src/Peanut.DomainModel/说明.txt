领域层就是较“胖”的一层，因为它实现了全部业务逻辑并且通过各种校验手段保证业务正确性。而什么是业务逻辑呢？业务流程、业务策略、业务规则、完整性约束等。
当领域中的某个操作过程或转换过程不是实体或值对象的职责时，我们便应该将该操作放在一个单独的接口中，即领域服务。请确保该服务和通用语言时一致的；并且保证它是无状态的。

根据这句话我们有几个问题需要理清：
什么时候使用领域服务？
领域服务无状态怎么理解？
领域服务是用来协调领域对象完成某个操作，用来处理业务逻辑的，它本身是一个行为，所以是无状态的。状态由领域对象（具有状态和行为）保存。
上面也说了，领域对象是具有状态和行为的。那就是说我们也可以在实体或值对象来处理业务逻辑。那我们该如何取舍呢？

一般来说，在下面的几种情况下，我们可以使用领域服务：
1.执行一个显著（复杂）的业务操作过程。
2.对领域对象进行转换。
3.以多个领域对象为输入，返回一个值对象。

代码生成工具用于非代码优先的设计和编码，比如：业务建模-->数据库建模-->生成数据库表-->生成代码。
考虑到领域模型可能充血模型，所以代码生成工具生成出来都是部分类。所以，领域的行为都要手动在类的其他部分写。

Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=Test;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False
